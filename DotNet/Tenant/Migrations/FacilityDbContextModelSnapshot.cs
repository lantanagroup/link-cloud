// <auto-generated />
using System;
using LantanaGroup.Link.Tenant.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LantanaGroup.Link.Tenant.Migrations
{
    [DbContext(typeof(FacilityDbContext))]
    partial class FacilityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LantanaGroup.Link.Tenant.Entities.FacilityConfigModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Facilities", (string)null);
                });

            modelBuilder.Entity("LantanaGroup.Link.Tenant.Entities.FacilityConfigModel", b =>
                {
                    b.OwnsOne("LantanaGroup.Link.Tenant.Entities.ScheduledReportModel", "ScheduledReports", b1 =>
                        {
                            b1.Property<Guid>("FacilityConfigModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Daily")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Monthly")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Weekly")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FacilityConfigModelId");

                            b1.ToTable("Facilities");

                            b1.ToJson("ScheduledReports");

                            b1.WithOwner()
                                .HasForeignKey("FacilityConfigModelId");
                        });

                    b.Navigation("ScheduledReports")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
