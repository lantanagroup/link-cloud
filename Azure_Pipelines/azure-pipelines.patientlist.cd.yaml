trigger:
  branches:
    include:
    - main
  paths:
    include:
    - PatientList/*
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: Link_BOTW_Build_Package_Variables
- name: project
  value: 'PatientList/PatientList.csproj'
- name: testProject
  value: 'PatientListUnitTests/PatientListUnitTests.csproj'
- name: nugetPath
  value: 'PatientList/nuget.config'
- name: tags1
  value: 'latest'
- name: tags2
  value: '$(Build.BuildId)'
- name: registry-repo-Name
  value: 'link-patientlist'
- name: dockerPath
  value: '**/PatientList/Dockerfile'
- name: serviceName
  value: 'PatientList'
- name: containerRegistry
  value: 'NHSNLink ACR Premium'

steps:
  - template: ../azure-nuget-package-source.yml

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: '$(project)'
      nugetConfigPath: '$(nugetPath)'
      feedsToUse: config
  
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '$(project)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: $(testProject)'
    displayName: 'Run Tests'
  

  - task: Docker@2
    displayName: "Build & Push PatientList Docker Image"
    condition: always()
    inputs:
      containerRegistry: $(containerRegistry)
      repository: $(registry-repo-name)
      command: 'buildAndPush'
      Dockerfile: $(dockerPath)
      tags: |
        $(tags1)
        $(tags2)
      buildContext: '$(Build.Repository.LocalPath)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'manifest'
