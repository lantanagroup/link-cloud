trigger:
  branches:
    include:
    - dev
    - release/*
  paths:
    include:
    - Java/validation/*
    - Java/shared/*
    exclude:
    - '*'
    
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: link-cloud-variables
- name: repositoryName
  value: 'link-validation'
- name: dockerPath
  value: 'Java/validation/Dockerfile'
- name: serviceName
  value: 'Validation'
- name: containerRegistry
  value: 'NHSNLink ACR Premium'

steps:
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: GetRevision@1
    displayName: 'Get Revision'
    inputs:
      VariableName: Revision

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        GIT_COMMIT=$(git rev-parse --short HEAD)
        echo "GIT_COMMIT: ${GIT_COMMIT}"
        echo "##vso[task.setvariable variable=GIT_COMMIT]${GIT_COMMIT}"

  - task: Maven@2
    displayName: Maven Install
    inputs:
      mavenPomFile: 'Java/pom.xml'
      goals: install
      options: '-pl validation -am'
  
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        if ("$(Build.SourceBranch)" -like "*release/*") {
        $myTag1 = "release-$(Build.SourceBranchName)-r$(Revision)-$(GIT_COMMIT)"
        }
        else { 
        $myTag1 = "$(Build.SourceBranchName)-r$(Revision)-$(GIT_COMMIT)"
        }
        Write-Host "##vso[task.setvariable variable=MyTag]$myTag1"
        Write-Host "Set MyTag to: $myTag1"

  - task: Docker@2
    displayName: "Build & Push Audit Docker Image"
    condition: always()
    inputs:
      containerRegistry: $(containerRegistry)
      repository: $(repositoryName)
      command: 'buildAndPush'
      Dockerfile: $(dockerPath)
      tags: |
        latest
        $(MyTag)
      buildContext: 'Java/'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'manifest'
