trigger:
  branches:
    include:
    - dev
    - release/*
  paths:
    include:
    - DotNet/LinkAdmin.BFF/*
    - DotNet/Shared/*
    - DotNet/Link.Authorization/*
    exclude:
    - '*'

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: link-cloud-variables
- name: project
  value: 'DotNet/LinkAdmin.BFF/LinkAdmin.BFF.csproj'
- name: registryRepositoryName
  value: 'link-bff'
- name: dockerPath
  value: '**/DotNet/LinkAdmin.BFF/Dockerfile'
- name: containerRegistry
  value: 'NHSNLink ACR Premium'

steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: '$(project)'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        GIT_COMMIT=$(git rev-parse --short HEAD)
        echo "GIT_COMMIT: ${GIT_COMMIT}"
        echo "##vso[task.setvariable variable=GIT_COMMIT]${GIT_COMMIT}"
  
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '$(project)'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        if ("$(Build.SourceBranch)" -like "*release/*") {
        $myTag1 = "release-$(Build.SourceBranchName)-r$(Revision)-$(GIT_COMMIT)"
        }
        else { 
        $myTag1 = "$(Build.SourceBranchName)-r$(Revision)-$(GIT_COMMIT)"
        }
        Write-Host "##vso[task.setvariable variable=MyTag]$myTag1"
        Write-Host "Set MyTag to: $myTag1"
  
  - task: Docker@2
    displayName: "Build & Push Docker Image"
    condition: always()
    inputs:
      containerRegistry: $(containerRegistry)
      repository: $(registryRepositoryName)
      command: 'buildAndPush'
      Dockerfile: $(dockerPath)
      tags: |
        latest
        $(MyTag)
      buildContext: '$(Build.Repository.LocalPath)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'manifest'
