trigger:
  branches:
    include:
    - dev
    - release/*
  paths:
    include:
    - Web/DemoApp/*
    exclude:
    - '*'
    
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: link-cloud-variables
- name: registry-repo-Name
  value: 'link-demo-app'
- name: dockerPath
  value: '**/Web/DemoApp/Dockerfile'
- name: workingDir
  value: 'Web/DemoApp/'
- name: serviceName
  value: 'DemoApp'
- name: containerRegistry
  value: 'NHSNLink ACR Premium'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'
 
  - task: Npm@1  
    displayName: 'Angular CLI 13.2.5'  
    inputs:  
      command: custom  
      verbose: false  
      customCommand: 'install -g @angular/cli'

  - task: Npm@1  
    displayName: 'npm install'  
    inputs:
      command: custom  
      workingDir: $(workingDir)
      customCommand: 'install'
      
  - task: Npm@1  
    displayName: Build  
    inputs: 
      command: custom  
      verbose: false 
      workingDir: $(workingDir)
      customCommand: 'run build'
  
  - task: Docker@2
    displayName: "Build & Push DemoApiGateway Docker Image"
    condition: always()
    inputs:
      containerRegistry: $(containerRegistry)
      repository: $(registry-repo-name)
      command: 'buildAndPush'
      Dockerfile: $(dockerPath)
      tags: |
        latest
        $(Build.BuildId)
      buildContext: '$(workingDir)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'manifest'
